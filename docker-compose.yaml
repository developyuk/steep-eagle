version:          '2'
services:
  web-main:
    image: node
    volumes:
       - ./web-main:/project
    working_dir:  /project
    ports:
      - "81:8080"
    depends_on:
      - api-main
    command: npm run dev
#  web-operation:
#    build:        ./web-main
#    volumes:
#       - ./web-operation:/project/app
#    working_dir:  /project/app
#    ports:
#      - "82:8080"
#    depends_on:
#      - api-main
#    command:      ["npm", "run", "dev"]
#  web-partner:
#    build:      ./web-main
#    volumes:
#       - ./web-partner:/project/app
#    working_dir: /project/app
#    ports:
#      - "83:8080"
#    command:    ["npm", "run", "dev"]
  api-main:
    build:        ./api-main
    volumes:
       - ./api-main:/project
    working_dir:  /project
    expose:
      - "3000"
    ports:
     - "84:3000"
    environment:
      - JWT_KEY=${JWT_KEY}
    depends_on:
      - db-main
    command:      gin run
  db-main:
    build:       ./db-main
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  db-api:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    links:
      - db-main:db
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-main:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=public
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${JWT_KEY}
  db-admin:
    image:      adminer
    ports:
      - "5050:8080"
    links:
      - db-main:db
  # redis:
  #   image:      redis
