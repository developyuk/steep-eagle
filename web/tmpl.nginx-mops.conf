server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name  ${NGINX_HOST_1};

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://${NGINX_HOST_1}$request_uri;
}
server {
  # listen [::]:443 ssl http2 accept_filter=dataready;  # for FreeBSD
  # listen 443 ssl http2 accept_filter=dataready;  # for FreeBSD
  # listen [::]:443 ssl http2 deferred;  # for Linux
  # listen 443 ssl http2 deferred;  # for Linux
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name  ${NGINX_HOST_1};

  # Specify a charset
  charset utf-8;

  # Custom 404 page
  error_page 404 /404.html;
  location = /404.html {
      root   /usr/share/nginx/html;
  }
  # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
      root   /usr/share/nginx/html;
  }

  location / {
      root   /usr/share/nginx/html/mops;
      index  index.html index.htm;
      include security.conf;
  }

  # Include the basic h5bp config set
  include basic.conf;
  include ssl.conf;

  # This default SSL certificate will be served whenever the client lacks support for SNI (Server Name Indication).
  # Make it a symlink to the most important certificate you have, so that users of IE 8 and below on WinXP can see your main site without SSL errors.
  #ssl_certificate      /etc/nginx/default_ssl.crt;
  #ssl_certificate_key  /etc/nginx/default_ssl.key;
  ssl_certificate /etc/letsencrypt/live/mops.codingcamp.id/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/mops.codingcamp.id/privkey.pem;

  #trusted cert must be made up of your intermediate certificate followed by root certificate
  #ssl_trusted_certificate /path/to/ca.crt;
  ssl_trusted_certificate /etc/letsencrypt/live/mops.codingcamp.id/chain.pem;
}
